
@online{noauthor_cncf_2018,
	title = {{CNCF} Survey: Use of cloud native technologies in production has grown over 200\%},
	url = {https://www.cncf.io/blog/2018/08/29/cncf-survey-use-of-cloud-native-technologies-in-production-has-grown-over-200-percent/},
	shorttitle = {{CNCF} Survey},
	abstract = {The bi-annual {CNCF} survey takes a pulse of the community to better understand the adoption of cloud native technologies. This is the sixth time {CNCF} has taken the temperature of the containerâ€¦},
	titleaddon = {Cloud Native Computing Foundation},
	urldate = {2020-11-22},
	date = {2018-08-29},
	langid = {american},
	file = {Snapshot:/home/chris/Zotero/storage/CEGBEKS5/cncf-survey-use-of-cloud-native-technologies-in-production-has-grown-over-200-percent.html:text/html}
}

@article{biswas_hybrid_2017,
	title = {A hybrid auto-scaling technique for clouds processing applications with service level agreements},
	volume = {6},
	issn = {2192-113X},
	url = {https://doi.org/10.1186/s13677-017-0100-5},
	doi = {10.1186/s13677-017-0100-5},
	abstract = {This research focuses on the automatic provisioning of cloud resources by an intermediary enterprise. This enterprise provides a virtual private cloud for a single client enterprise by using resources from a public cloud. The intermediary cloud provider is controlled by a broker that uses techniques to dynamically control the number of resources used by the client enterprise. The research presents a hybrid auto-scaling technique based on a combination of a reactive approach and a proactive approach to scale resources based on user demand. The primary goal of this auto-scaling technique is to achieve a profit for the intermediary enterprise while maintaining a desired grade of service for the client enterprise. The second goal of the technique is to reduce costs for the single client enterprise. The technique supports both on-demand requests and requests with service level agreements ({SLAs}). This paper describes the auto-scaling algorithms associated with the hybrid technique and includes a discussion of system design and implementation experience for a prototype system. A detailed performance analysis based on simulations and measurements made based on the prototype is presented.},
	pages = {29},
	number = {1},
	journaltitle = {Journal of Cloud Computing},
	shortjournal = {J Cloud Comp},
	author = {Biswas, Anshuman and Majumdar, Shikharesh and Nandy, Biswajit and El-Haraki, Ali},
	urldate = {2020-11-22},
	date = {2017-12-19},
	langid = {english},
	file = {Springer Full Text PDF:/home/chris/Zotero/storage/P3EIBYUE/Biswas et al. - 2017 - A hybrid auto-scaling technique for clouds process.pdf:application/pdf}
}

@article{danayi_opencot_2019,
	title = {{openCoT}: The opensource Cloud of Things platform},
	url = {http://arxiv.org/abs/1901.00302},
	shorttitle = {{openCoT}},
	abstract = {In order to address the complexity and extensiveness of technology, Cloud Computing is utilized with four main service models. The most recent service model, function-as-a-service, enables developers to develop their application in a function-based structure and then deploy it to the Cloud. Using an optimum elastic auto-scaling, the performance of executing an application over {FaaS} Cloud, overcomes the extra overhead and reduces the total cost. However, researchers need a simple and well-documented {FaaS} Cloud manager in order to implement their proposed Auto-scaling algorithms. In this paper, we represent the {openCoT} platform and explain its building blocks and details. Experimental results show that executing a function (invoking and passing arguments) and returning the result using {openCoT} takes 21 ms over a remote connection. The source code of {openCoT} is available in the {GitHub} repository of the project (www.github.com/adanayi/opencot) for public usage.},
	journaltitle = {{arXiv}:1901.00302 [cs]},
	author = {Danayi, Abolfazl and Sharifian, Saeed},
	urldate = {2020-11-25},
	date = {2019-01-02},
	langid = {english},
	eprinttype = {arxiv},
	eprint = {1901.00302},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Networking and Internet Architecture},
	file = {Danayi and Sharifian - 2019 - openCoT The opensource Cloud of Things platform.pdf:/home/chris/Zotero/storage/GRPTVNBS/Danayi and Sharifian - 2019 - openCoT The opensource Cloud of Things platform.pdf:application/pdf}
}

@inproceedings{biswas_auto-scaling_2015,
	title = {An Auto-Scaling Framework for Controlling Enterprise Resources on Clouds},
	doi = {10.1109/CCGrid.2015.120},
	abstract = {This paper presents a novel technique for auto-scaling cloud resources provided by an intermediary enterprise which services requests from a client enterprise. The intermediary enterprise acquires resources on demand from a public cloud. A broker is deployed by the intermediary enterprise to handle client requests with service level agreements ({SLAs}). A reactive auto-scaling algorithm is activated on request arrival and achieves auto-scaling by acquiring new resources for serving the recently arrived request. The technique ensures that a grade of service specified by the client enterprise is satisfied and is based on a profit analysis for the intermediary enterprise. A resources is released after the last request allocated on the resource has completed execution. The paper demonstrates that the proposed reactive auto-scaling technique can effectively lead to a profit for the intermediary enterprise as well as a reduction of cost for the client enterprise.},
	eventtitle = {2015 15th {IEEE}/{ACM} International Symposium on Cluster, Cloud and Grid Computing},
	pages = {971--980},
	booktitle = {2015 15th {IEEE}/{ACM} International Symposium on Cluster, Cloud and Grid Computing},
	author = {Biswas, A. and Majumdar, S. and Nandy, B. and El-Haraki, A.},
	date = {2015-05},
	keywords = {Auto-scaling, client enterprise, client requests, cloud computing, Cloud computing, cloud resources autoscaling, contracts, cost reduction, dynamic resource provisioning, Dynamic scheduling, enterprise resource control, enterprise resource planning, intermediary enterprise, Measurement, Monitoring, profit analysis, profitability, public cloud, reactive auto-scaling algorithm, recently arrived request, resource allocation, Resource management, resource management on clouds, Schedules, scheduling with {SLAs}, service grade, service level agreements, {SLA}},
	file = {IEEE Xplore Abstract Record:/home/chris/Zotero/storage/JWLXTDEK/7152583.html:text/html}
}

@inproceedings{melendez_framework_2013,
	title = {A Framework for Automatic Resource Provisioning for Private Clouds},
	doi = {10.1109/CCGrid.2013.91},
	abstract = {A private cloud is maintained by an enterprise forits internal use. In such a scenario instead of buying the resources the enterprise can acquire the resources from a public cloud such as the ones provided by Amazon and Microsoft. On conventional systems rigorous analysis of the system and its workload is performed for determining the appropriate number of resources to be deployed on the private cloud. This paper presents a middleware framework that avoids this step of a priori capacity analysis and allows such private cloud owners to provision resources automatically such that a specified grade of service is maintained. The proposed framework performs dynamic resource provisioning that also leads to a reduction of operational cost. Additional resources are acquired during high traffic periods and released during low traffic periods such that the desired grade of service is always maintained. The paper describes the architecture of the framework and the experience gained from a prototype implementation including a preliminary analysis of its performance.},
	eventtitle = {2013 13th {IEEE}/{ACM} International Symposium on Cluster, Cloud, and Grid Computing},
	pages = {610--617},
	booktitle = {2013 13th {IEEE}/{ACM} International Symposium on Cluster, Cloud, and Grid Computing},
	author = {Melendez, J. O. and Biswas, A. and Majumdar, S. and Nandy, B. and Zaman, M. and Srivastava, P. and Goel, N.},
	date = {2013-05},
	keywords = {a priori capacity analysis, Amazon, automatic resource provisioning, cloud computing, Cloud computing, Computer architecture, cost reduction, dynamic resource provisioning, Dynamic scheduling, enterprise resources, Measurement, Microsoft, middleware, middleware framework, Monitoring, operational cost reduction, private clouds, prototype implementation, Prototypes, public cloud, resource alllocation and scheduling, resource allocation, resource management on clouds, scheduling, traffic periods},
	file = {IEEE Xplore Full Text PDF:/home/chris/Zotero/storage/GI672BJA/Melendez et al. - 2013 - A Framework for Automatic Resource Provisioning fo.pdf:application/pdf}
}

@inproceedings{ye_auto-scaling_2017,
	title = {An Auto-Scaling Framework for Containerized Elastic Applications},
	doi = {10.1109/BIGCOM.2017.40},
	abstract = {Mechanisms for automatic resource provisioning in cloud environment have been widely studied. However, most current work are based on Virtual Machines({VMs}) and few auto-scaling systems dedicated for containerized environment have been presented. This paper proposes an auto-scaler that caters for containerized elastic applications. We devise a hybrid scaling strategy based on a resource demand prediction model to meet Service Level Agreements({SLAs}) in face of quickly varying workloads. We implemented our system in a private container-centric cloud environment and experimental results demonstrate that our auto-scaling framework out-performs existing rule-based approaches.},
	eventtitle = {2017 3rd International Conference on Big Data Computing and Communications ({BIGCOM})},
	pages = {422--430},
	booktitle = {2017 3rd International Conference on Big Data Computing and Communications ({BIGCOM})},
	author = {Ye, T. and Guangtao, X. and Shiyou, Q. and Minglu, L.},
	date = {2017-08},
	keywords = {auto-scaling, automatic resource provisioning, autoscaling framework, cloud computing, Cloud computing, container, containerized elastic applications, containerized environment, Containers, contracts, elasticity, hybrid scaling strategy, Measurement, Monitoring, Prediction algorithms, Predictive models, private container-centric cloud environment, resource allocation, resource demand prediction model, service level agreements, {SLAs}, Time series analysis, virtual machines, {VMs}},
	file = {IEEE Xplore Full Text PDF:/home/chris/Zotero/storage/59QHZEUT/Ye et al. - 2017 - An Auto-Scaling Framework for Containerized Elasti.pdf:application/pdf;IEEE Xplore Abstract Record:/home/chris/Zotero/storage/CHTX58MX/8113097.html:text/html}
}

@online{chandra_cloud_2020,
	title = {Cloud Bursting with Virtual Kubelet and {KIP} (Kloud Instance Provider)},
	url = {https://itnext.io/cloud-bursting-with-virtual-kubelet-and-kip-kloud-instance-provider-4b86a479ce38},
	abstract = {Cloud bursting is an application deployment model in which an application runs in a private cloud or data center and bursts into a publicâ€¦},
	titleaddon = {Medium},
	author = {Chandra, Gokul},
	urldate = {2020-11-26},
	date = {2020-05-26},
	langid = {english},
	file = {Snapshot:/home/chris/Zotero/storage/M6T6U4SL/cloud-bursting-with-virtual-kubelet-and-kip-kloud-instance-provider-4b86a479ce38.html:text/html}
}

@online{mennig_cloud_2020,
	title = {Cloud Bursting â€“ platzt die Private Cloud, ist die Public Cloud zur Stelle},
	url = {https://www.heise.de/hintergrund/Cloud-Bursting-platzt-die-Private-Cloud-ist-die-Public-Cloud-zur-Stelle-4968960.html},
	abstract = {On Premises betriebene Anwendungen in der Private Cloud lassen sich bei Auslastungsspitzen durch die RechenkapazitÃ¤t einer Public Cloud entlasten.},
	titleaddon = {Developer},
	author = {Mennig, Simon},
	urldate = {2020-11-26},
	date = {2020-11-22},
	langid = {german},
	file = {Snapshot:/home/chris/Zotero/storage/HI58WUHD/Cloud-Bursting-platzt-die-Private-Cloud-ist-die-Public-Cloud-zur-Stelle-4968960.html:text/html}
}